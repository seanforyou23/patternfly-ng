{"version":3,"sources":["../../../build/src/app/filter/filter.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,WAAA,EAAY,MAAO,gBAAA,CAAiB;AAC7C,OAAO,EAAE,QAAA,EAAS,MAAO,eAAA,CAAgB;AAEzC,OAAO,EAAE,gBAAA,EAAkB,gBAAA,EAAiB,MAAO,wBAAA,CAAyB;AAC5E,OAAO,EAAE,aAAA,EAAc,MAAO,uBAAA,CAAwB;AACtD,OAAO,EAAE,aAAA,EAAe,aAAA,EAAc,MAAO,uBAAA,CAAwB;AAErE,OAAO,EAAE,MAAA,EAAO,MAAO,UAAA,CAAW;AAClC,OAAO,EAAE,eAAA,EAAgB,MAAO,oBAAA,CAAqB;AACrD,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,WAAA,EAAY,MAAO,gBAAA,CAAiB;AAC7C,OAAO,EAAE,WAAA,EAAY,MAAO,gBAAA,CAAiB;AAC7C,OAAO,EAAE,qBAAA,EAAsB,MAAO,2BAAA,CAA4B;AAClE,OAAO,EAAE,sBAAA,EAAuB,MAAO,4BAAA,CAA6B;AACpE,OAAO,EAAE,WAAA,EAAY,MAAO,gBAAA,CAAiB;AAC7C,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,UAAA,EAAW,MAAO,uBAAA,CAAwB;AAEnD,OAAO,EACL,MAAM,EACN,YAAY,EACZ,WAAW,EACX,WAAW,EACX,WAAW,EACX,UAAU,EACX,CAAC;AAEF;;GAEG;AAEH;IAAA;IAkBA,CAAC;IAlBiC,uBAAU,GAA0B;QACtE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE;wBACP,gBAAgB,CAAC,OAAO,EAAE;wBAC1B,YAAY;wBACZ,WAAW;wBACX,UAAU;wBACV,aAAa,CAAC,OAAO,EAAE;wBACvB,aAAa,CAAC,OAAO,EAAE;qBACxB;oBACD,YAAY,EAAE,CAAC,eAAe,EAAE,qBAAqB,EAAE,sBAAsB,CAAC;oBAC9E,OAAO,EAAE,CAAC,eAAe,EAAE,qBAAqB,EAAE,sBAAsB,CAAC;oBACzE,SAAS,EAAE,CAAC,gBAAgB,EAAE,aAAa,CAAC;iBAC7C,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,mBAAC;CAlBD,AAkBC,IAAA;SAlBY,YAAY","file":"filter.module.js","sourceRoot":"","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { BsDropdownConfig, BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipConfig, TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { Filter } from './filter';\nimport { FilterComponent } from './filter.component';\nimport { FilterConfig } from './filter-config';\nimport { FilterEvent } from './filter-event';\nimport { FilterField } from './filter-field';\nimport { FilterFieldsComponent } from './filter-fields.component';\nimport { FilterResultsComponent } from './filter-results.component';\nimport { FilterQuery } from './filter-query';\nimport { FilterType } from './filter-type';\nimport { PipeModule } from './../pipe/pipe.module';\n\nexport {\n  Filter,\n  FilterConfig,\n  FilterEvent,\n  FilterField,\n  FilterQuery,\n  FilterType\n};\n\n/**\n * A module containing objects associated with filter components\n */\n\nexport class FilterModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    BsDropdownModule.forRoot(),\n    CommonModule,\n    FormsModule,\n    PipeModule,\n    PopoverModule.forRoot(),\n    TooltipModule.forRoot()\n  ],\n  declarations: [FilterComponent, FilterFieldsComponent, FilterResultsComponent],\n  exports: [FilterComponent, FilterFieldsComponent, FilterResultsComponent],\n  providers: [BsDropdownConfig, TooltipConfig]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}