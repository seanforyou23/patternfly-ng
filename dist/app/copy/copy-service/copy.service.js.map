{"version":3,"file":"copy.service.js","sourceRoot":"","sources":["../../../../build/src/app/copy/copy-service/copy.service.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AAGrD;IAGE,qBAA8B,GAAa;QACzC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,0BAAI,GAAJ,UAAK,KAAa;QAChB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAElD,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;QAC9B,QAAQ,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;QAClC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC;QAC9B,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC/B,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;QAC7B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAElB,IAAI,CAAC;YACH,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;gBAAS,CAAC;YACT,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;gBACtC,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC;QACH,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAvCU,WAAW;QADvB,UAAU,EAAE;QAIE,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;yCAAM,QAAQ;OAHhC,WAAW,CAwCvB;IAAD,kBAAC;CAAA,AAxCD,IAwCC;SAxCY,WAAW","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n@Injectable()\nexport class CopyService {\n  dom: Document;\n\n  constructor(@Inject(DOCUMENT) dom: Document) {\n    this.dom = dom;\n  }\n\n  /**\n   * Copy token to the user's system clipboard\n   */\n  copy(value: string): boolean {\n    let result = false;\n    let textarea = this.dom.createElement('textarea');\n\n    textarea.style.width = '0px';\n    textarea.style.height = '0px';\n    textarea.style.position = 'fixed';\n    textarea.style.top = '-100px';\n    textarea.style.left = '-100px';\n    textarea.style.opacity = '0';\n    textarea.value = value;\n\n    this.dom.body.appendChild(textarea);\n    textarea.select();\n\n    try {\n      result = this.dom.execCommand('copy');\n    } catch (error) {\n      this.handleError(error);\n    } finally {\n      if (textarea.parentNode !== undefined) {\n        textarea.parentNode.removeChild(textarea);\n      }\n    }\n    return result;\n  }\n\n  private handleError(error: any): void {\n    console.error(error);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}