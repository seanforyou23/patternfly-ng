{"version":3,"file":"table-base.js","sourceRoot":"","sources":["../../../../build/src/app/table/table-base.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef\n} from '@angular/core';\n\nimport { Action } from '../action/action';\nimport { FilterEvent } from '../filter/filter-event';\nimport { PaginationEvent } from '../pagination/pagination-event';\nimport { SortEvent } from '../sort/sort-event';\nimport { ToolbarView } from '../toolbar/toolbar-view';\nimport { TableEvent } from './table-event';\n\n/**\n * Table base\n */\nexport abstract class TableBase {\n  /**\n   * The name of the toolbar template containing actions\n   */\n  @Input() actionTemplate: TemplateRef<any>;\n\n  /**\n   * The name of the toolbar template containing views\n   */\n  @Input() viewTemplate: TemplateRef<any>;\n\n  /**\n   * The event emitted when a row has been dragged and dropped\n   */\n  @Output('onDrop') onDrop = new EventEmitter();\n\n  /**\n   * The Event is emitted when Page Size is changed\n   */\n  @Output('onPageSizeChange') onPageSizeChange = new EventEmitter();\n\n  /**\n   * The Event is emitted when Page Number is Changed\n   */\n  @Output('onPageNumberChange') onPageNumberChange = new EventEmitter();\n\n  /**\n   * The event emitted when an action (e.g., button, kebab, etc.) has been selected\n   */\n  @Output('onActionSelect') onActionSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a field menu option is selected\n   */\n  @Output('onFilterFieldSelect') onFilterFieldSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a filter has been changed\n   */\n  @Output('onFilterChange') onFilterChange = new EventEmitter();\n\n  /**\n   * The event emitted when a filter has been saved\n   */\n  @Output('onFilterSave') onFilterSave = new EventEmitter();\n\n  /**\n   * The event emitted when the user types ahead in the query input field\n   */\n  @Output('onFilterTypeAhead') onFilterTypeAhead = new EventEmitter();\n\n  /**\n   * The event emitted when an item selection has been changed\n   */\n  @Output('onSelectionChange') onSelectionChange = new EventEmitter();\n\n  /**\n   * The event emitted when the sort has changed\n   */\n  @Output('onSortChange') onSortChange = new EventEmitter();\n\n  /**\n   * The event emitted when a view has been selected\n   */\n  @Output('onViewSelect') onViewSelect = new EventEmitter();\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Private\n\n  protected handleAction($event: Action) {\n    this.onActionSelect.emit($event);\n  }\n\n  protected handleFilterChange($event: FilterEvent) {\n    this.onFilterChange.emit($event);\n  }\n\n  protected handleFilterFieldSelect($event: FilterEvent) {\n    this.onFilterFieldSelect.emit($event);\n  }\n\n  protected handleFilterTypeAhead($event: FilterEvent) {\n    this.onFilterTypeAhead.emit($event);\n  }\n\n  protected handleFilterSave($event: FilterEvent) {\n    this.onFilterSave.emit($event);\n  }\n\n  protected handlePageSize($event: PaginationEvent) {\n    this.onPageSizeChange.emit($event);\n  }\n\n  protected handlePageNumber($event: PaginationEvent) {\n    this.onPageNumberChange.emit($event);\n  }\n\n  protected handleSelectionChange($event: TableEvent) {\n    this.onSelectionChange.emit($event);\n  }\n\n  protected handleSortChange($event: SortEvent) {\n    this.onSortChange.emit($event);\n  }\n\n  protected handleViewSelect($event: ToolbarView) {\n    this.onViewSelect.emit($event);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}